[templates.claude-commands]
description = "Claude Code custom slash command template"

required_args = [
    { name = "name", description = "Command name (e.g., refactor, debug, review)" },
    { name = "description", description = "Command description" }
]

optional_args = [
    { name = "author", default = "Generated", description = "Author name" },
    { name = "date", default = "{{current_date}}", description = "Creation date" }
]

files = [
    { source = "templates/command.md", destination = ".claude/commands/{{name}}.md" }
]

[templates.claude-project-init]
description = "Initialize AI development project with Claude Code configuration"

required_args = [
    { name = "name", description = "Project name" }
]

optional_args = [
    { name = "author", default = "Generated", description = "Author name" },
    { name = "date", default = "{{current_date}}", description = "Creation date" },
    { name = "description", default = "AI-powered development project", description = "Project description" },
    { name = "tech_stack", default = "TypeScript/React", description = "Primary technology stack" }
]

files = [
    { source = "templates/CLAUDE.md", destination = "{{name}}/CLAUDE.md" },
    { source = "templates/commands/refactor.md", destination = "{{name}}/.claude/commands/refactor.md" },
    { source = "templates/commands/debug.md", destination = "{{name}}/.claude/commands/debug.md" },
    { source = "templates/commands/review.md", destination = "{{name}}/.claude/commands/review.md" },
    { source = "templates/commands/optimize.md", destination = "{{name}}/.claude/commands/optimize.md" },
    { source = "templates/commands/docs.md", destination = "{{name}}/.claude/commands/docs.md" }
]

[templates.claude-multiagent]
description = "Claude Code multi-agent communication system with tmux (based on nishimoto265/Claude-Code-Communication)"

required_args = [
    { name = "name", description = "Project name" }
]

optional_args = [
    { name = "author", default = "Generated", description = "Author name" },
    { name = "date", default = "{{current_date}}", description = "Creation date" },
    { name = "description", default = "Multi-agent communication demo", description = "Project description" },
    { name = "workers", default = "3", description = "Number of worker agents" }
]

files = [
    { source = "templates/README.md", destination = "{{name}}/README.md" },
    { source = "templates/CLAUDE.md", destination = "{{name}}/CLAUDE.md" },
    { source = "templates/setup.sh", destination = "{{name}}/setup.sh" },
    { source = "templates/agent-send.sh", destination = "{{name}}/agent-send.sh" },
    { source = "templates/gitignore", destination = "{{name}}/.gitignore" },
    { source = "templates/instructions/president.md", destination = "{{name}}/instructions/president.md" },
    { source = "templates/instructions/boss.md", destination = "{{name}}/instructions/boss.md" },
    { source = "templates/instructions/worker.md", destination = "{{name}}/instructions/worker.md" }
]

[templates.claude-cursorrules]
description = "Generate .cursorrules file for Cursor AI editor with technology-specific configurations"

required_args = [
    { name = "tech_stack", description = "Technology stack (react, python, go, rust, etc.)" }
]

optional_args = [
    { name = "author", default = "Generated", description = "Author name" },
    { name = "date", default = "{{current_date}}", description = "Creation date" },
    { name = "project_name", default = "{{tech_stack}}-project", description = "Project name" },
    { name = "description", default = "AI-optimized development with Cursor", description = "Project description" },
    { name = "conventions", default = "Standard conventions", description = "Code conventions" },
    { name = "testing", default = "true", description = "Include testing guidelines" },
    { name = "docs", default = "true", description = "Include documentation guidelines" }
]

files = [
    { source = "templates/cursorrules/{{tech_stack}}.cursorrules", destination = ".cursorrules" },
    { source = "templates/cursor-docs/README.md", destination = "CURSOR_SETUP.md" }
]

[templates.claude-mcp-server]
description = "Generate MCP (Model Context Protocol) server for Claude integration"

required_args = [
    { name = "name", description = "Server name (e.g., file-manager, database-connector)" },
    { name = "language", description = "Programming language (typescript, python, rust, go)" }
]

optional_args = [
    { name = "author", default = "Generated", description = "Author name" },
    { name = "date", default = "{{current_date}}", description = "Creation date" },
    { name = "description", default = "MCP server for Claude integration", description = "Server description" },
    { name = "version", default = "1.0.0", description = "Initial version" },
    { name = "tools", default = "true", description = "Include tools support" },
    { name = "resources", default = "true", description = "Include resources support" },
    { name = "prompts", default = "false", description = "Include prompts support" }
]

files = [
    { source = "templates/mcp-server/{{language}}/package.json", destination = "{{name}}-mcp-server/package.json" },
    { source = "templates/mcp-server/{{language}}/src/index.ts", destination = "{{name}}-mcp-server/src/index.ts" },
    { source = "templates/mcp-server/{{language}}/README.md", destination = "{{name}}-mcp-server/README.md" },
    { source = "templates/mcp-server/{{language}}/tsconfig.json", destination = "{{name}}-mcp-server/tsconfig.json" },
    { source = "templates/mcp-server/claude-config.json", destination = "{{name}}-mcp-server/claude-config.json" }
]