name: {{name}}

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: [{{dotnet_version}}]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build application
        run: dotnet build --no-restore --configuration Release

      - name: Run tests
        run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./TestResults/

  build:
    runs-on: ubuntu-latest
    needs: test
    
    strategy:
      matrix:
        runtime: [linux-x64, win-x64, osx-x64]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: {{dotnet_version}}

      - name: Restore dependencies
        run: dotnet restore

      - name: Publish application
        run: dotnet publish --configuration Release --runtime ${{ matrix.runtime }} --self-contained true --output ./publish/${{ matrix.runtime }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.runtime }}
          path: ./publish/${{ matrix.runtime }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy application
        run: |
          echo "Add your deployment commands here"
          echo "Example: Deploy to Azure, Docker registry, etc."
          # Example deployment commands:
          # az webapp deployment source config-zip --resource-group myResourceGroup --name myApp --src app.zip

# Generated by Universal Scaffold Tool
# Author: {{author}}
# Created: {{date}}